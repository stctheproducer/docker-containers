# The custom property lets you specify any sorts of values
# you want to reuse elsewhere in your prisma.yml. It thus
# doesn't have a predefined structure. You can reference
# the values using variables with the self variable source
#  e.g.: ${self:custom.myVariable}.
custom:
  language: javascript
  generatedPath: ./src/Schema/generated

# This service is based on the type definitions in the two files
# databasetypes.prisma` and `database/enums.prisma`
datamodel:
  - database/datamodel.graphql
  # - database/types.prisma
  # - database/enums.prisma

# The endpoint represents the HTTP endpoint for your Prisma API.
# It encodes several pieces of information:
# * Prisma server (`localhost:4466` in this example)
# * Service name (`myservice` in this example)
# * Stage (`dev` in this example)
# NOTE: When service name and stage are set to `default`, they
# can be omitted.
# Meaning http://myserver.com/default/default can be written
# as http://myserver.com.
# endpoint: http://localhost:4466/myservice/dev
endpoint: ${env:PRISMA_ENDPOINT}

# The secret is used to create JSON web tokens (JWTs). These
# tokens need to be attached in the `Authorization` header
# of HTTP requests made against the Prisma endpoint.
# WARNING: If the secret is not provided, the Prisma API can
# be accessed without authentication!
secret: ${env:PRISMA_SECRET}

# The databaseType property expects a string. The value of
# the string can either be relational or document. If the
# databaseType property is omitted, its value defaults to
# relational.
databaseType: document

# Generate a Prisma client in TypeScript and store in
# a folder called `generated/prisma-client`.
# It also downloads the Prisma GraphQL schema and stores it
# in `generated/prisma.graphql`.
generate:
  - generator: ${self:custom.language}-client # javascript-client
    output: ${self:custom.generatedPath}/prisma-client/
  - generator: graphql-schema
    output: ${self:custom.generatedPath}/prisma.graphql

# A "post-deployment" hook that regenerates
# the Prisma client.
hooks:
  post-deploy:
    - echo "Deployment finished"
    # - prisma generate
# Executes a Node.js script to seed the database with
# initial data.
# seed:
# run: node data/seed.js
