## Data Source Name ##
#
# Sets the data source name. This configures the backend where ORY Keto persists data. If dsn is "memory", data will be written to memory and is lost when you restart this instance. ORY Hydra supports popular SQL databases. For more detailed configuration information go to: https://www.ory.sh/docs/hydra/dependencies-environment#sql
#
# Examples:
# - postgres://user:password@host:123/database
# - mysql://user:password@tcp(host:123)/database
# - memory
#
# dsn: memory

## HTTP REST API ##
#
serve:
  ## Port ##
  #
  # The port to listen on.
  #
  # Default value: 4456
  #
  # Examples:
  # - 4456
  #
  port: 4466

  ## Host ##
  #
  # The network interface to listen on.
  #
  # Examples:
  # - localhost
  # - 127.0.0.1
  #
  host:
    - localhost
    - 127.0.0.1

  ## Cross Origin Resource Sharing (CORS) ##
  #
  # Configure [Cross Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/) using the following options.
  #
  cors:
    ## Enable CORS ##
    #
    # If set to true, CORS will be enabled and preflight-requests (OPTION) will be answered.
    #
    # Default value: false
    #
    enabled: true

    ## Allowed Origins ##
    #
    # A list of origins a cross-domain request can be executed from. If the special * value is present in the list, all origins will be allowed. An origin may contain a wildcard (*) to replace 0 or more characters (i.e.: http://*.domain.com). Usage of wildcards implies a small performance penality. Only one wildcard can be used per origin.
    #
    # Default value: *
    #
    # Examples:
    # - - https://example.com
    #   - https://*.example.com
    #   - https://*.foo.example.com
    #
    allowed_origins:
      - "*"

    ## Allowed HTTP Methods ##
    #
    # A list of methods the client is allowed to use with cross-domain requests.
    #
    # Default value: GET,POST,PUT,PATCH,DELETE
    #
    allowed_methods:
      - PATCH
      - GET
      - POST
      - DELETE
      - PUT

    ## Allowed Request HTTP Headers ##
    #
    # A list of non simple headers the client is allowed to use with cross-domain requests.
    #
    # Default value: Authorization,Content-Type
    #
    allowed_headers:
      - Authorization
      - Content-Type

    ## Allowed Response HTTP Headers ##
    #
    # Indicates which headers are safe to expose to the API of a CORS API specification
    #
    # Default value: Content-Type
    #
    exposed_headers:
      - Content-Type

    ## Allow HTTP Credentials ##
    #
    # Indicates whether the request can include user credentials like cookies, HTTP authentication or client side SSL certificates.
    #
    # Default value: false
    #
    allow_credentials: true

    ## Maximum Age ##
    #
    # Indicates how long (in seconds) the results of a preflight request can be cached. The default is 0 which stands for no max age.
    #
    max_age: 60979592

    ## Enable Debugging ##
    #
    # Set to true to debug server side CORS issues.
    #
    # Default value: false
    #
    debug: true

  ## HTTPS ##
  #
  # Configure HTTP over TLS (HTTPS). All options can also be set using environment variables by replacing dots (`.`) with underscores (`_`) and uppercasing the key. For example, `some.prefix.tls.key.path` becomes `export SOME_PREFIX_TLS_KEY_PATH`. If all keys are left undefined, TLS will be disabled.
  #
  # tls:
  ## Private Key (PEM) ##
  #
  # key:
  ## path ##
  #
  # path: path/to/file.pem
  ## base64 ##
  #
  # base64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG5NSUlEWlRDQ0FrMmdBd0lCQWdJRVY1eE90REFOQmdr...
  ## TLS Certificate (PEM) ##
  #
  # cert:
  ## path ##
  #
  # path: path/to/file.pem
  ## base64 ##
  #
  # base64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG5NSUlEWlRDQ0FrMmdBd0lCQWdJRVY1eE90REFOQmdr...

## Profiling ##
#
# Enables CPU or memory profiling if set. For more details on profiling Go programs read [Profiling Go Programs](https://blog.golang.org/profiling-go-programs).
#
# profiling: ""

## Log ##
#
# Configure logging using the following options. Logging will always be sent to stdout and stderr.
#
log:
  ## Level ##
  #
  # Debug enables stack traces on errors. Can also be set using environment variable LOG_LEVEL.
  #
  # Default value: info
  #
  level: debug

  ## Format ##
  #
  # The log format can either be text or JSON.
  #
  # Default value: text
  #
  format: JSON
## tracing ##
#
# ORY Keto supports distributed tracing.
#
# tracing:

## provider ##
#
# Set this to the tracing backend you wish to use. Currently supports jaeger. If omitted or empty, tracing will be disabled.
#
# Examples:
# - jaeger
#
# provider: jaeger

## service_name ##
#
# Specifies the service name to use on the tracer.
#
# Examples:
# - ORY Keto
#
# service_name: ORY Keto

## providers ##
#
# providers:

## jaeger ##
#
# Configures the jaeger tracing backend.
#
# jaeger:

## local_agent_address ##
#
# The address of the jaeger-agent where spans should be sent to.
#
# Examples:
# - 127.0.0.1:6831
#
# local_agent_address: 127.0.0.1:6831

## propagation ##
#
# The tracing header format
#
# Examples:
# - jaeger
#
# propagation: jaeger

## sampling ##
#
# Examples:
# - type: const
#   value: 1
#   server_url: http://localhost:5778/sampling
#
# sampling:

## type ##
#
# type: const

## value ##
#
# value: 1

## server_url ##
#
# server_url: http://localhost:5778/sampling
