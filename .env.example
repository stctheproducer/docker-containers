# Location of the application projects
APP_PROJECTS=/home/$USER/projects
APP_CODE_PATH_HOST=../
APP_CODE_PATH_CONTAINER=/usr

VOLUMES_DRIVER=local
NETWORKS_DRIVER=bridge

# You may add flags to the path `:cached`, `:delegated`.
APP_CODE_CONTAINER_FLAG=:cached

DATA_PATH_HOST=~/.docker/data

### Docker compose files ##################################

# Select which docker-compose files to include.
COMPOSE_FILE=docker-compose.yml

WORKSPACE_TIMEZONE=Africa/Lusaka

# Change the separator from : to ; on Windows
COMPOSE_PATH_SEPARATOR=:

# Define the prefix of container names. This is useful if you have multiple projects that use laradock to have seperate containers per project.
COMPOSE_PROJECT_NAME=global

### APPLICATION DOMAINS #################################################
# Domain name of reverse SSH tunnel such as ngrok
TUNNEL_URL=your.domain.tld
# Local domain name
DOMAIN_NAME=local.test

### APPLICATION PORTS #################################################
APP_CONTAINER_PORT=3000
GRAPHQL_CONTAINER_PORT=4000
PRISMA_CONTAINER_PORT=4466
STRAPI_CONTAINER_PORT=1337
MONGO_EXPRESS_CONTAINER_PORT=8081
LOGOWL_CONTAINER_PORT=2800
WEBHOOK_CONTAINER_PORT=9000
ADMINER_CONTAINER_PORT=8080
PHPMYADMIN_CONTAINER_PORT=80
PGADMIN_CONTAINER_PORT=80
REDIS_WEBUI_CONTAINER_PORT=80
ELASTICSEARCH_HOST_HTTP_PORT=9200
FUSIONAUTH_CONTAINER_PORT=9011

### MICROSERVICE CONTAINERS #################################################
MS_DIR=microservices

MS_ONE=authors
MS_ONE_PORT=3333

### API #################################################
API_DATABASE_CLIENT=postgres
API_DATABASE_HOST=postgres
API_DATABASE_URL=jdbc:postgresql
API_DATABASE_PORT=5432
API_DATABASE_SRV=false
# API_DATABASE_NAME=
API_DATABASE_USER=default
API_DATABASE_PASSWORD=FFjbJ2LQ5xpj9FYkae4CQNC
API_DATABASE_ROOT_USER=root
API_DATABASE_ROOT_PASSWORD=FFjbJ2LQ5xpj9FYkae4CQNC
API_DATABASE_SSL=false
API_DATABASE_AUTHENTICATION_DATABASE=admin

### GRAPHQL_API #################################################
GRAPHQL_API_ENV=development
# Used to validate user sessions
GRAPHQL_API_APP_SECRET=GRAPHQLAPIApplicationSecret

# See BYCRYPT docs
GRAPHQL_API_BCRYPT_SALT_ROUNDS=12
GRAPHQL_PRISMA_FRONTEND_URL=
GRAPHQL_PRISMA_BACKEND_URL=
GRAPHQL_PRISMA_PLAYGROUND_URL=

### PRISMA #################################################

PRISMA_MANAGEMENT_API_SECRET=PrismaManagmentSecret
PRISMA_MIGRATIONS=false
PRISMA_CONNECTION_LIMIT=2
# Used to access the Prisma API
PRISMA_ENDPOINT=http://prisma:4466
# .local.test
PRISMA_SECRET=PrismaSecret


### MYSQL #################################################

MYSQL_VERSION=8
MYSQL_DATABASE=${API_DATABASE_NAME}
MYSQL_USER=${API_DATABASE_USERNAME}
MYSQL_PASSWORD=${API_DATABASE_PASSWORD}
MYSQL_PORT=3306
MYSQL_ROOT_PASSWORD=root
MYSQL_ENTRYPOINT_INITDB=./mysql/docker-entrypoint-initdb.d

### MARIADB ###############################################

MARIADB_VERSION=bionic
MARIADB_DATABASE=${API_DATABASE_NAME}
MARIADB_USER=${API_DATABASE_USERNAME}
MARIADB_PASSWORD=${API_DATABASE_PASSWORD}
MARIADB_PORT=3306
MARIADB_ROOT_PASSWORD=root
MARIADB_ENTRYPOINT_INITDB=./mariadb/docker-entrypoint-initdb.d

### POSTGRES ##############################################

POSTGRES_VERSION=alpine
POSTGRES_DB=${API_DATABASE_NAME}
POSTGRES_USER=${API_DATABASE_USERNAME}
POSTGRES_PASSWORD=${API_DATABASE_PASSWORD}
POSTGRES_PORT=5432
POSTGRES_ENTRYPOINT_INITDB=./postgres/docker-entrypoint-initdb.d

### WEBHOOK ###############################################

WEBHOOK_HOOKS_DIR=./webhook/hooks
WEBHOOK_SCRIPTS_DIR=./webhook/scripts
WEBHOOK_DEPLOY_REPOSITORY=${APP_CODE_PATH_HOST}
WEBHOOK_VERSION=2.8.0

### MONGODB ###############################################

MONGO_VERSION=4.2.1
MONGODB_PORT=27017
MONGO_INITDB_ROOT_USERNAME=${API_DATABASE_USERNAME}
MONGO_INITDB_ROOT_PASSWORD=${API_DATABASE_PASSWORD}
MONGO_INITDB_DATABASE=${API_DATABASE_NAME}

### MONGO-WEBUI ###############################################
MONGO_WEBUI_PORT=3000
MONGO_WEBUI_ROOT_URL=http://localhost
MONGO_WEBUI_MONGO_URL=mongodb://mongo:27017/
MONGO_WEBUI_INSTALL_MONGO=false

### MONGO-EXPRESS ###############################################

ME_CONFIG_MONGODB_SERVER=mongo
ME_CONFIG_BASICAUTH_USERNAME=default
ME_CONFIG_BASICAUTH_PASSWORD=secret
ME_CONFIG_MONGODB_ENABLE_ADMIN=true
ME_CONFIG_MONGODB_AUTH_DATABASE=${API_DATABASE_AUTHENTICATION_DATABASE}
ME_CONFIG_MONGODB_AUTH_USERNAME=${API_DATABASE_USERNAME}
ME_CONFIG_MONGODB_AUTH_PASSWORD=${API_DATABASE_PASSWORD}

### ADMINER ###############################################
ADMINER_DESIGN=galkaev

### PGADMIN ###############################################
PGADMIN_DEFAULT_EMAIL=user@local.test
PGADMIN_DEFAULT_PASSWORD=secret
PGADMIN_LISTEN_ADDRESS=0.0.0.0
PGADMIN_LISTEN_PORT=80

### TRAEFIK #################################################

TRAEFIK_VERSION=2.3
TRAEFIK_HOST_HTTP_PORT=80
TRAEFIK_HOST_HTTPS_PORT=443

### REDIS #################################################

REDIS_PORT=6379

### REDIS CLUSTER #########################################

REDIS_CLUSTER_PORT_RANGE=7000-7005

### REDISWEBUI #########################################
REDIS_WEBUI_USERNAME=default
REDIS_WEBUI_PASSWORD=FFjbJ2LQ5xpj9FYkae4CQNC
REDIS_WEBUI_CONNECT_HOST=redis
REDIS_WEBUI_CONNECT_PORT=6379
REDIS_WEBUI_PORT=9987

### ELASTIC SEARCH #########################################
ELK_VERSION=6.3.1
ELASTICSEARCH_JAVA_OPTS=-Xms256m -Xmx256m
ELASTICSEARCH_HOST_TRANSPORT_PORT=9300

### FUSIONAUTH #########################################
FUSIONAUTH_VERSION=1.23.1
FUSIONAUTH_APP_MEMORY=512M
FUSIONAUTH_HTTP_PORT=80
FUSIONAUTH_HTTPS_PORT=443
FUSIONAUTH_DATABASE_URL=jdbc:postgresql
FUSIONAUTH_DATABASE_USER=fusionauth
FUSIONAUTH_DATABASE_PASSWORD=fusionauthpassword
FUSIONAUTH_DATABASE_NAME=fusionauth
FUSIONAUTH_APP_RUNTIME_MODE=development
FUSIONAUTH_APP_SILENT_MODE=false
FUSIONAUTH_APP_URL=http://fusionauth:9011
FUSIONAUTH_APP_KICKSTART_FILE=/usr/local/fusionauth/kickstart/kickstart.json
SEARCH_SERVERS=http://elasticsearch:9200
SEARCH_TYPE=database

### LOGOWL #########################################
LOGOWL_VERSION=2.2.1
LOGOWL_SECRET=1WSTm3rqRnFndlhCH9gqH6XrW04
LOGOWL_DB_USER=logowluser
LOGOWL_DB_PASSWORD=logowlpassword
LOGOWL_MONGO_DB_NAME=logowl
LOGOWL_CLIENT_URL=http://localhost:3000
LOGOWL_MONTHLY_REQUEST_LIMIT=100000
LOGOWL_IS_SELFHOSTED=true
MAILGUN_PRIVATE_KEY=aaa-aaa-aaa
MAILGUN_DOMAIN=dev.test
MAILGUN_API_BASE=eu # or us

### FILEBEAT #########################################
FILEBEAT_VERSION=7.10.2

### DRONE CI #########################################
DRONE_VERSION=1
DRONE_GITHUB_CLIENT_ID=github_client_id
DRONE_GITHUB_CLIENT_SECRET=github_cient_secret
DRONE_RPC_SECRET=drone_secret
DRONE_SERVER_HOST=drone.domain.com # Public IP or host
DRONE_RPC_HOST=192.168.1.5:80 # Public IP or host
DRONE_SERVER_PROTO=http # or https
DRONE_RPC_PROTO=http # or https
DRONE_RUNNER_CAPACITY=2
DRONE_RUNNER_NAME=drone-runner-name
DRONE_PRIVATE_KEY_FILE=/ssh/drone_runner
DRONE_PUBLIC_KEY_FILE=/ssh/drone_runner.pub
# Optional String value. Configures the database driver name.
DRONE_DATABASE_DRIVER=postgres
DRONE_DATABASE_NAME=drone
DRONE_DATABASE_USER=drone
DRONE_DATABASE_PASSWORD=db_password
# Optional string value. Configures the database connection string.
DRONE_DATABASE_DATASOURCE=postgres://root:password@1.2.3.4:5432/postgres?sslmode=disable
# Optional string value. Configures the secret key used to encrypt secrets in
# the database. Encryption is disabled by default and must be configured before
# the system is first used.
DRONE_DATABASE_SECRET=drone_db_secret
# Optional string value configures the S3 bucket name.
DRONE_S3_BUCKET=my-bucket
DRONE_S3_ENDPOINT=https://play.min.io
# Optional boolean value configures the S3 client to use path style.
DRONE_S3_PATH_STYLE=false
# Optional string value configures the S3 client to store log files in a bucket
# subdirectory. If unset log files are stored in the bucket root.
DRONE_S3_PREFIX=some/path
# String value configures a comma-separated list of webhook endpoints, to which
# global system events are delivered.
DRONE_WEBHOOK_ENDPOINT=http://postb.in/b/cajf7cIU
# Optional string value provides a comma-separated list of events and actions
# that trigger webhooks. If unset all events and actions trigger webhooks.
# Available events:
# user:created
# user:updated
# user:deleted
# repo:enabled
# repo:disabled
# repo:updated
# build:created
# build:updated
DRONE_WEBHOOK_EVENTS=user:created,build,repo
# Shared secret used to create an http-signature. The webhook recipient can use
# the shared secret to verify request authenticity.
DRONE_WEBHOOK_SECRET=dron-webhook-secret
# Boolean value disables TLS verification when establishing a connection to the
# remote webhook address. The default value is false.
DRONE_WEBHOOK_SKIP_VERIFY=false