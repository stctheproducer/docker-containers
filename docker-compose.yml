version: "3"

networks:
  frontend:
    # external: true
    driver: ${NETWORKS_DRIVER}
  backend:
    # external: false
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  mariadb:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}

services:
  ### Application ################################################
  app:
    depends_on:
      - traefik
      # - strapi
    restart: always
    build:
      context: ../app/
    volumes:
      - ${APP_CODE_PATH_CONTAINER}/app/node_modules
      - ${APP_CODE_PATH_HOST}/app:${APP_CODE_PATH_CONTAINER}/app
    environment:
      HOST: 0.0.0.0
    networks:
      - frontend
    expose:
      - "3000"
    labels:
      - "traefik.backend=app"
      - "traefik.frontend.rule=Host:${APP_WEB_URL}"
      - "traefik.port=3000"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_frontend"

  ## API ###############################EXPOSE 3000#################
  strapi:
    depends_on:
      - ${STRAPI_DATABASE_HOST}
    build:
      context: ../api
    restart: unless-stopped
    expose:
      - "1337"
    networks:
      - frontend
      - backend
    labels:
      - "traefik.backend=strapi"
      - "traefik.frontend.rule=Host:${STRAPI_HOST_URL}"
      - "traefik.port=1337"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_frontend"
    volumes:
      - ${APP_CODE_PATH_CONTAINER}/api/node_modules
      - ${APP_CODE_PATH_HOST}/api:${APP_CODE_PATH_CONTAINER}/api

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    networks:
      - backend
    labels:
      - traefik.enable=false

  ### MariaDB ##############################################
  mariadb:
    build:
      context: ./mariadb
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - MARIADB_VERSION=${MARIADB_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/mariadb:/var/lib/mysql
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - backend
    labels:
      - traefik.enable=false

  ### MongoDB ##############################################
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ${DATA_PATH_HOST}/mongo:/data/db
    networks:
      - backend
    labels:
      - traefik.enable=false

  ### Mongo Express ##############################################
  mongo-express:
    depends_on:
      - mongo
    image: mongo-express
    # restart: always
    networks:
      - frontend
      - backend
    labels:
      - "traefik.backend=mongo-express"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_frontend"
      - "traefik.frontend.rule=Host:${ME_URL}"
      - "traefik.port=8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: ${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${ME_CONFIG_MONGODB_AUTH_DATABASE}
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${ME_CONFIG_MONGODB_AUTH_USERNAME}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${ME_CONFIG_MONGODB_AUTH_PASSWORD}

  ### Jenkins ###################################################
  jenkins:
    build: ./jenkins
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true"
    ports:
      - "${JENKINS_HOST_SLAVE_AGENT_PORT}:50000"
      - "${JENKINS_HOST_HTTP_PORT}:8080"
    privileged: true
    volumes:
      - ${JENKINS_HOME}:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frontend
      - backend

  ### Adminer ################################################
  adminer:
    image: adminer:4.7.3-standalone
    restart: unless-stopped
    environment:
      - ADMINER_DESIGN=${ADMINER_DESIGN}
    labels:
      - "traefik.backend=adminer"
      - "traefik.frontend.rule=Host:${ADMINER_URL}"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_frontend"
      - "traefik.port=8080"
      # - "traefik.frontend.headers.SSLRedirect=false"
    networks:
      - frontend
      - backend
    depends_on:
      - ${ADMINER_HOST}

  ### TRAEFIK #########################################
  traefik:
    build:
      context: ./traefik
    restart: always
    command: --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${TRAEFIK_HOST_HTTP_PORT}:80"
      - "${TRAEFIK_HOST_HTTPS_PORT}:443"
    networks:
      - frontend
    labels:
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:${TRAEFIK_WEB_URL}"
      - "traefik.port=8080"
